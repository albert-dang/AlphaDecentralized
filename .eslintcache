[{"D:\\github\\alphadecentralized\\src\\index.js":"1","D:\\github\\alphadecentralized\\src\\reportWebVitals.js":"2","D:\\github\\alphadecentralized\\src\\App.js":"3","D:\\github\\alphadecentralized\\src\\components\\poweredByShowcase\\PoweredByReact.js":"4","D:\\github\\alphadecentralized\\src\\components\\poweredByShowcase\\PoweredByPandas.js":"5","D:\\github\\alphadecentralized\\src\\components\\poweredByShowcase\\ShowcaseSlider.js":"6","D:\\github\\alphadecentralized\\src\\components\\poweredByShowcase\\PoweredByZipline.js":"7","D:\\github\\alphadecentralized\\src\\components\\queryForm\\QueryForm.js":"8","D:\\github\\alphadecentralized\\src\\components\\reportSlider\\ReportSlider.js":"9","D:\\github\\alphadecentralized\\src\\components\\Navbar.js":"10","D:\\github\\alphadecentralized\\src\\components\\reportSlider\\FundamentalReport.js":"11","D:\\github\\alphadecentralized\\src\\components\\FundamentalReportContext.js":"12","D:\\github\\alphadecentralized\\src\\components\\reportSlider\\RedditStocksReport.js":"13","D:\\github\\alphadecentralized\\src\\components\\RedditStocksContext.js":"14"},{"size":684,"mtime":1613422900131,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1609871479837,"results":"17","hashOfConfig":"16"},{"size":489,"mtime":1612894842267,"results":"18","hashOfConfig":"16"},{"size":354,"mtime":1609877165835,"results":"19","hashOfConfig":"16"},{"size":375,"mtime":1609877166635,"results":"20","hashOfConfig":"16"},{"size":1156,"mtime":1613061152248,"results":"21","hashOfConfig":"16"},{"size":378,"mtime":1610089124552,"results":"22","hashOfConfig":"16"},{"size":2056,"mtime":1613410198990,"results":"23","hashOfConfig":"16"},{"size":1438,"mtime":1613430187537,"results":"24","hashOfConfig":"16"},{"size":409,"mtime":1612894787900,"results":"25","hashOfConfig":"16"},{"size":1788,"mtime":1613428650508,"results":"26","hashOfConfig":"16"},{"size":681,"mtime":1613411018274,"results":"27","hashOfConfig":"16"},{"size":2102,"mtime":1613430187483,"results":"28","hashOfConfig":"16"},{"size":912,"mtime":1613428885169,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"wylu80",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},"D:\\github\\alphadecentralized\\src\\index.js",[],["61","62"],"D:\\github\\alphadecentralized\\src\\reportWebVitals.js",[],"D:\\github\\alphadecentralized\\src\\App.js",[],"D:\\github\\alphadecentralized\\src\\components\\poweredByShowcase\\PoweredByReact.js",[],"D:\\github\\alphadecentralized\\src\\components\\poweredByShowcase\\PoweredByPandas.js",[],"D:\\github\\alphadecentralized\\src\\components\\poweredByShowcase\\ShowcaseSlider.js",[],"D:\\github\\alphadecentralized\\src\\components\\poweredByShowcase\\PoweredByZipline.js",[],"D:\\github\\alphadecentralized\\src\\components\\queryForm\\QueryForm.js",[],"D:\\github\\alphadecentralized\\src\\components\\reportSlider\\ReportSlider.js",[],"D:\\github\\alphadecentralized\\src\\components\\Navbar.js",["63","64","65","66","67"],"import React, {Component} from 'react'\r\nimport './navbar.css'\r\n\r\nexport default class Navbar extends React.Component{\r\n    render(){\r\n        return (\r\n            <div>\r\n              <ul id='nav'>\r\n                <li><a href=\"#\"></a>Analyze</li>\r\n                <li><a href=\"#\">Research</a></li>\r\n                <li><a href=\"#\">About</a></li>\r\n              </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\github\\alphadecentralized\\src\\components\\reportSlider\\FundamentalReport.js",[],"D:\\github\\alphadecentralized\\src\\components\\FundamentalReportContext.js",[],"D:\\github\\alphadecentralized\\src\\components\\reportSlider\\RedditStocksReport.js",["68","69","70","71","72","73"],"D:\\github\\alphadecentralized\\src\\components\\RedditStocksContext.js",["74"],"import React, {Component, createContext} from \"react\"\r\n\r\nconst RedditStocksContext = createContext()\r\nvar redditStocks\r\n\r\nfetch(`https://dangitsal.pythonanywhere.com/api/redditstocks`)\r\n.then(response => response.json())\r\n.then((jsonData) => {\r\n    console.log(JSON.stringify(jsonData))\r\n    redditStocks = jsonData\r\n})\r\n.catch((error) => {\r\nconsole.error(error)\r\n})\r\n\r\nexport class RedditStocksProvider extends Component{\r\n  state = {\r\n    data: 'Loading...'\r\n  }\r\n\r\n  setData = (data) => {\r\n    this.setState((prevState) => (({data})))\r\n  }\r\n\r\n  render(){\r\n    const {children} = this.props\r\n    const {data} = this.state\r\n    const {setData} = this\r\n\r\n    return(\r\n        <RedditStocksContext.Provider\r\n          value={{\r\n            data,\r\n            setData\r\n          }}\r\n        >\r\n          {children}\r\n        </RedditStocksContext.Provider>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default RedditStocksContext",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":1,"column":16,"nodeType":"81","messageId":"82","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"84","line":9,"column":21,"nodeType":"85","endLine":9,"endColumn":33},{"ruleId":"86","severity":1,"message":"87","line":9,"column":21,"nodeType":"85","endLine":9,"endColumn":33},{"ruleId":"86","severity":1,"message":"87","line":10,"column":21,"nodeType":"85","endLine":10,"endColumn":33},{"ruleId":"86","severity":1,"message":"87","line":11,"column":21,"nodeType":"85","endLine":11,"endColumn":33},{"ruleId":"88","severity":1,"message":"89","line":7,"column":13,"nodeType":"90","messageId":"91","endLine":7,"endColumn":100},{"ruleId":"92","severity":1,"message":"93","line":9,"column":145,"nodeType":"94","messageId":"95","endLine":9,"endColumn":147},{"ruleId":"92","severity":1,"message":"93","line":9,"column":161,"nodeType":"94","messageId":"95","endLine":9,"endColumn":163},{"ruleId":"92","severity":1,"message":"93","line":9,"column":177,"nodeType":"94","messageId":"95","endLine":9,"endColumn":179},{"ruleId":"96","severity":1,"message":"97","line":10,"column":16,"nodeType":"81","messageId":"98","endLine":10,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":11,"column":12,"nodeType":"90","messageId":"91","endLine":11,"endColumn":143},{"ruleId":"79","severity":1,"message":"99","line":10,"column":5,"nodeType":"81","messageId":"82","endLine":10,"endColumn":17},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-use-before-define","'today' was used before it was defined.","usedBeforeDefined","'redditStocks' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]