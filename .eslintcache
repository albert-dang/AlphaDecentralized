[{"D:\\github\\alphadecentralized\\src\\index.js":"1","D:\\github\\alphadecentralized\\src\\reportWebVitals.js":"2","D:\\github\\alphadecentralized\\src\\App.js":"3","D:\\github\\alphadecentralized\\src\\components\\poweredByShowcase\\PoweredByReact.js":"4","D:\\github\\alphadecentralized\\src\\components\\poweredByShowcase\\PoweredByPandas.js":"5","D:\\github\\alphadecentralized\\src\\components\\poweredByShowcase\\ShowcaseSlider.js":"6","D:\\github\\alphadecentralized\\src\\components\\poweredByShowcase\\PoweredByZipline.js":"7","D:\\github\\alphadecentralized\\src\\components\\queryForm\\QueryForm.js":"8","D:\\github\\alphadecentralized\\src\\components\\reportSlider\\ReportSlider.js":"9","D:\\github\\alphadecentralized\\src\\components\\reportSlider\\FundamentalReport.js":"10","D:\\github\\alphadecentralized\\src\\components\\FundamentalReportContext.js":"11","D:\\github\\alphadecentralized\\src\\components\\reportSlider\\RedditStocksReport.js":"12","D:\\github\\alphadecentralized\\src\\components\\RedditStocksContext.js":"13"},{"size":815,"mtime":1613458761906,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1609871479837,"results":"16","hashOfConfig":"15"},{"size":429,"mtime":1613717592426,"results":"17","hashOfConfig":"15"},{"size":354,"mtime":1609877165835,"results":"18","hashOfConfig":"15"},{"size":375,"mtime":1609877166635,"results":"19","hashOfConfig":"15"},{"size":1156,"mtime":1613061152248,"results":"20","hashOfConfig":"15"},{"size":378,"mtime":1610089124552,"results":"21","hashOfConfig":"15"},{"size":1696,"mtime":1613718252979,"results":"22","hashOfConfig":"15"},{"size":1434,"mtime":1613720353810,"results":"23","hashOfConfig":"15"},{"size":1981,"mtime":1613722559309,"results":"24","hashOfConfig":"15"},{"size":681,"mtime":1613411018274,"results":"25","hashOfConfig":"15"},{"size":2530,"mtime":1613677816811,"results":"26","hashOfConfig":"15"},{"size":940,"mtime":1613493097746,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"wylu80",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"D:\\github\\alphadecentralized\\src\\index.js",[],["58","59"],"D:\\github\\alphadecentralized\\src\\reportWebVitals.js",[],"D:\\github\\alphadecentralized\\src\\App.js",[],"D:\\github\\alphadecentralized\\src\\components\\poweredByShowcase\\PoweredByReact.js",[],"D:\\github\\alphadecentralized\\src\\components\\poweredByShowcase\\PoweredByPandas.js",[],"D:\\github\\alphadecentralized\\src\\components\\poweredByShowcase\\ShowcaseSlider.js",[],"D:\\github\\alphadecentralized\\src\\components\\poweredByShowcase\\PoweredByZipline.js",[],["60","61"],"D:\\github\\alphadecentralized\\src\\components\\queryForm\\QueryForm.js",["62"],"import React, {Component} from 'react'\r\nimport FundamentalReportContext from '../FundamentalReportContext'\r\nimport './QueryForm.css'\r\n\r\nexport default class QueryForm extends Component{\r\n    static contextType = FundamentalReportContext\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            symbol: 'GOOGL'\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        const{setData} = this.context\r\n        const assetClass = this.state.assetClass\r\n        const symbol = this.state.symbol\r\n\r\n        fetch(`https://dangitsal.pythonanywhere.com/api/stocks?symbol=${symbol}`)\r\n            .then(response => response.json())\r\n            .then((jsonData) => {\r\n                console.log(JSON.stringify(jsonData))\r\n                setData(jsonData)\r\n            })\r\n            .catch((error) => {\r\n            console.error(error)\r\n            })\r\n    }\r\n\r\n    render(){\r\n        const{symbol} = this.state.symbol\r\n        return(\r\n            <div className='queryFormWrapper'>\r\n                <form className='queryForm' onSubmit={this.onSubmit}>\r\n                    <label className='symbolLabel'>\r\n                        Symbol:\r\n                        <input type='text' name='symbol' value={symbol} onChange={this.onChange}/>\r\n                    </label>\r\n                    <div className='queryButtonWrapped'>\r\n                        <button className='queryButton' type='submit'>\r\n                            Analyze\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\github\\alphadecentralized\\src\\components\\reportSlider\\ReportSlider.js",[],"D:\\github\\alphadecentralized\\src\\components\\reportSlider\\FundamentalReport.js",[],"D:\\github\\alphadecentralized\\src\\components\\FundamentalReportContext.js",[],"D:\\github\\alphadecentralized\\src\\components\\reportSlider\\RedditStocksReport.js",["63","64","65","66","67","68"],"import React, {useContext} from 'react'\r\nimport RedditStocksContext from '../RedditStocksContext'\r\nimport './RedditStocksReport.css'\r\n\r\nconst RedditStocks = () => {\r\n  var objToday = new Date(),\r\n  weekday = new Array('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'),\r\n  dayOfWeek = weekday[objToday.getDay()],\r\n  domEnder = function() { var a = objToday; if (/1/.test(parseInt((a + \"\").charAt(0)))) return \"th\"; a = parseInt((a + \"\").charAt(1)); return 1 == a ? \"st\" : 2 == a ? \"nd\" : 3 == a ? \"rd\" : \"th\" }(),\r\n  dayOfMonth = today + ( objToday.getDate() < 10) ? '0' + objToday.getDate() + domEnder : objToday.getDate() + domEnder,\r\n  months = new Array('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'),\r\n  curMonth = months[objToday.getMonth()],\r\n  curYear = objToday.getFullYear()\r\n  var today = '9AM ' + dayOfWeek + ' ' + dayOfMonth + ' of ' + curMonth + ', ' + curYear\r\n\r\n  const redditStocks = useContext(RedditStocksContext)\r\n\r\n  return (\r\n    <div className = 'redditStocksWrapper'>\r\n      <h3>Top Mentioned Stocks on Reddit (24 Hours)</h3>\r\n      <p>{today}</p>\r\n      <div className = 'redditStocksBody' style={{marginTop: '24x'}}>\r\n        <div className = 'tickersColumn'>\r\n          <p>Ticker</p>\r\n          <p>{redditStocks.data[0]['ticker']}</p>\r\n          <p>{redditStocks.data[1]['ticker']}</p>\r\n          <p>{redditStocks.data[2]['ticker']}</p>\r\n          <p>{redditStocks.data[3]['ticker']}</p>\r\n          <p>{redditStocks.data[4]['ticker']}</p>\r\n          <p>{redditStocks.data[5]['ticker']}</p>\r\n          <p>{redditStocks.data[6]['ticker']}</p>\r\n          <p>{redditStocks.data[7]['ticker']}</p>\r\n          <p>{redditStocks.data[8]['ticker']}</p>\r\n          <p>{redditStocks.data[9]['ticker']}</p>\r\n        </div>\r\n        <div className = 'mentionsColumn'>\r\n          <p>Mentions (Diluted)</p>\r\n          <p>{redditStocks.data[0]['mentions']}</p>\r\n          <p>{redditStocks.data[1]['mentions']}</p>\r\n          <p>{redditStocks.data[2]['mentions']}</p>\r\n          <p>{redditStocks.data[3]['mentions']}</p>\r\n          <p>{redditStocks.data[4]['mentions']}</p>\r\n          <p>{redditStocks.data[5]['mentions']}</p>\r\n          <p>{redditStocks.data[6]['mentions']}</p>\r\n          <p>{redditStocks.data[7]['mentions']}</p>\r\n          <p>{redditStocks.data[8]['mentions']}</p>\r\n          <p>{redditStocks.data[9]['mentions']}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RedditStocks","D:\\github\\alphadecentralized\\src\\components\\RedditStocksContext.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"69","replacedBy":"73"},{"ruleId":"71","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":22,"column":15,"nodeType":"77","messageId":"78","endLine":22,"endColumn":25},{"ruleId":"79","severity":1,"message":"80","line":7,"column":13,"nodeType":"81","messageId":"82","endLine":7,"endColumn":100},{"ruleId":"83","severity":1,"message":"84","line":9,"column":145,"nodeType":"85","messageId":"86","endLine":9,"endColumn":147},{"ruleId":"83","severity":1,"message":"84","line":9,"column":161,"nodeType":"85","messageId":"86","endLine":9,"endColumn":163},{"ruleId":"83","severity":1,"message":"84","line":9,"column":177,"nodeType":"85","messageId":"86","endLine":9,"endColumn":179},{"ruleId":"87","severity":1,"message":"88","line":10,"column":16,"nodeType":"77","messageId":"89","endLine":10,"endColumn":21},{"ruleId":"79","severity":1,"message":"80","line":11,"column":12,"nodeType":"81","messageId":"82","endLine":11,"endColumn":143},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],["90"],["91"],"no-unused-vars","'assetClass' is assigned a value but never used.","Identifier","unusedVar","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-use-before-define","'today' was used before it was defined.","usedBeforeDefined","no-global-assign","no-unsafe-negation"]